# variables:
  # SERVICE_NAME: go-api # for example: product-api-pangpang-brand from  https://gitlab.p2shop.cn:8443/data/rtc-data/blob/qa/config.qa.yml
  # FOLDERNAME: ""  # for example: nomni/
variables:
  SERVICE_NAME: rtc-api
  LINUX_RTC: rtc-linux_amd64
  WINDOW_RTC: rtc-win64.exe
  MAC_RTC: rtc-$darwin_amd64
  GOTEST_ENV:  "-e JWT_SECRET=1234 -e JWT_TOKEN=1234"
  RTC_ENV: " --no-login --mysql-port 3310 "
include: 
  - project: 'open/gitlab-ci'
    file: '/templates/beta-go.gitlab-ci.yml'
stages:
  - build
  - test
  - release
release:
  stage: release
  tags:
    - golang-build
  script:
    - >
      docker run --rm 
      -v $(pwd):/go/src/$WORKDIR
      -w /go/src/$WORKDIR
      -e CGO_ENABLED=0
      -e GOOS=windows
      -e GOARCH=amd64
      $GOBUILDER
      sh -c '
      go get -v -d &&
      go build -ldflags "-s -w -X 'main.Version=$CI_COMMIT_TAG'" -o '$WINDOW_RTC' &&
      chmod -- 777 '$WINDOW_RTC''
    - >
      docker run --rm 
      -v $(pwd):/go/src/$WORKDIR
      -w /go/src/$WORKDIR
      -e CGO_ENABLED=0
      $GOBUILDER
      sh -c '
      go get -v -d &&
      go build -ldflags "-s -w -X 'main.Version=$CI_COMMIT_TAG'" -o '$LINUX_RTC' &&
      chmod -- 777 '$LINUX_RTC''
    - >
      docker run --rm 
      -v $(pwd):/go/src/$WORKDIR
      -w /go/src/$WORKDIR
      -e CGO_ENABLED=0
      -e GOOS=darwin
      -e GOARCH=amd64
      $GOBUILDER
      sh -c '
      go get -v -d &&
      go build -ldflags "-s -w -X 'main.Version=$CI_COMMIT_TAG'" -o '$MAC_RTC' &&
      chmod -- 777 '$MAC_RTC''
    - upx -9 $LINUX_RTC
    - upx -9 $MAC_RTC
    - upx -9 $WINDOW_RTC
  artifacts:
    paths:
      - $WINDOW_RTC
      - $MAC_RTC
      - $LINUX_RTC
    expire_in: 30m
  only:
    - tags
