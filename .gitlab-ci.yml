# variables:
  # SERVICE_NAME: go-api # for example: product-api-pangpang-brand from  https://gitlab.p2shop.cn:8443/data/rtc-data/blob/qa/config.qa.yml
  # FOLDERNAME: ""  # for example:nomni/
variables:
  SERVICE_NAME: rtc-api
  LINUX_RTC: rtc-linux_amd64
  WINDOW_RTC: rtc-win64.exe
  MAC_RTC: rtc-darwin_amd64
  RTC_ENV: " --docker-no-login" # use qa for rtc-api
include: 
  - project: 'open/gitlab-ci'
    file: '/templates/go.gitlab-ci.yml'
stages:
  - pre-build
  - build-qa
  - unit-test-qa
  - integration-build-qa
  - integration-test-qa
  - build-prd
  - unit-test-prd
  - integration-build-prd
  - integration-test-prd
  - app-deploy
app-deploy:
  stage: app-deploy
  tags:
    - shell
  script:
    - mkdir -p vendor
    - |
      if [ -d "$SHARE_FOLDER" ]; then
      cp -r $SHARE_FOLDER/* vendor/
      fi
    - >
      docker run --rm 
      -v $(pwd):/go/src/$WORKDIR
      -w /go/src/$WORKDIR
      -e CGO_ENABLED=0
      -e GOOS=windows
      -e GOARCH=amd64
      $GOBUILDER_IMAGE
      sh -c '
      go get -v -d &&
      go build -ldflags "-s -w -X 'main.Version=$CI_COMMIT_TAG'" -o '$WINDOW_RTC' &&
      chmod -- 777 '$WINDOW_RTC''
    - >
      docker run --rm 
      -v $(pwd):/go/src/$WORKDIR
      -w /go/src/$WORKDIR
      -e CGO_ENABLED=0
      $GOBUILDER_IMAGE
      sh -c '
      go get -v -d &&
      go build -ldflags "-s -w -X 'main.Version=$CI_COMMIT_TAG'" -o '$LINUX_RTC' &&
      chmod -- 777 '$LINUX_RTC''
    - >
      docker run --rm 
      -v $(pwd):/go/src/$WORKDIR
      -w /go/src/$WORKDIR
      -e CGO_ENABLED=0
      -e GOOS=darwin
      -e GOARCH=amd64
      $GOBUILDER_IMAGE
      sh -c '
      go get -v -d &&
      go build -ldflags "-s -w -X 'main.Version=$CI_COMMIT_TAG'" -o '$MAC_RTC' &&
      chmod -- 777 '$MAC_RTC''
    - upx -9 $LINUX_RTC
    - upx -9 $WINDOW_RTC
    - upx394 -9 $MAC_RTC
    - chmod a+wx $LINUX_RTC
    - chmod a+wx $WINDOW_RTC
    - chmod a+wx $MAC_RTC
  artifacts:
    paths:
      - $WINDOW_RTC
      - $MAC_RTC
      - $LINUX_RTC
    expire_in: 30m
  only:
    - tags
